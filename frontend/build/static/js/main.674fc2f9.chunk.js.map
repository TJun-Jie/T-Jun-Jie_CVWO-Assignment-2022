{"version":3,"sources":["layouts/basicTheme.ts","layouts/useBasicStyles.ts","layouts/CustomDrawer.tsx","redux/hooks.ts","redux/slices/taskSlice.ts","components/NewTaskCard.tsx","components/SingleTask.tsx","layouts/Header.tsx","layouts/index.tsx","pages/HomePage/index.tsx","pages/CompletedTaskPage/index.tsx","pages/labels/LowPriority.tsx","pages/labels/MediumPriority.tsx","pages/labels/HighPriority.tsx","pages/NotFound.tsx","MainRouter.tsx","App.tsx","reportWebVitals.ts","i18n.ts","redux/rootReducer.ts","redux/store.ts","index.tsx"],"names":["basicTheme","createTheme","typography","button","textTransform","fontFamily","palette","primary","main","contrastText","dark","secondary","light","useBasicStyles","makeStyles","theme","createStyles","root","minHeight","backgroundColor","width","content","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","textAlign","marginTop","CustomDrawer","drawer","setDrawer","t","useTranslation","Drawer","PaperProps","sx","open","anchor","onClose","Box","onClick","onKeyDown","List","color","ListItem","component","Link","to","ListItemIcon","ListItemText","useAppDispatch","useDispatch","useAppSelector","useSelector","taskSlice","createSlice","name","initialState","tasks","reducers","setTasks","state","action","payload","actions","selectTasks","allTasks","validationSchema","yup","title","required","description","priorityID","TextFieldStyles","marginBottom","SelectFieldStyles","NewTaskCard","setShowTaskCard","useState","priorities","setPriorities","error","setError","dispatch","getPrioritiesEnum","a","axios","get","process","res","data","useEffect","renderPriorities","map","item","i","MenuItem","value","_id","formik","useFormik","initialValues","onSubmit","values","post","completed","marginLeft","paddingBottom","Card","CardContent","Typography","fontSize","handleSubmit","TextField","fullWidth","label","variant","onChange","handleChange","touched","Boolean","errors","helperText","display","justifyContent","FormControl","minWidth","InputLabel","id","Select","labelId","FormHelperText","Button","mr","mt","type","SingleTask","task","forHeader","location","useLocation","setOpen","console","log","handleDelete","delete","pathname","handleClose","put","Checkbox","checked","setFieldValue","cursor","Dialog","DialogTitle","DialogContent","paddingTop","DialogActions","ml","Divider","searchStyles","height","paddingLeft","Header","searchQuery","setSearchQuery","filteredTasks","filter","startsWith","renderTask","AppBar","position","Toolbar","IconButton","size","edge","flexDirection","style","left","top","zIndex","placeholder","autoComplete","e","target","length","border","flexGrow","paddingRight","textDecoration","BasicLayout","children","classes","className","HomePage","styles","showTaskCard","isLoaded","setIsLoaded","getData","marginRight","mx","CircularProgress","CompletedTaskPage","LowPriorityPage","MediumPriorityPage","HighPriorityPage","NotFound","MainRouter","path","element","LowPriority","MediumPriority","HighPriority","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","resources","en","common","i18n","use","initReactI18next","init","defaultNS","lng","interpolation","escapeValue","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.674fc2f9.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material/styles\";\n\nconst palette = {\n  primary: {\n    main: \"#F3F4F8\",\n    contrastText: \"#fff\",\n    dark: \"#545353\",\n  },\n  secondary: {\n    main: \"#3B3B3B\",\n    dark: \"#222222\",\n    light: \"#e1e1e1\",\n    contrastText: \"#fff\",\n  },\n};\n\nconst basicTheme = createTheme({\n  typography: {\n    button: {\n      textTransform: \"none\",\n    },\n    fontFamily: \"Robotto\",\n  },\n  palette,\n});\n\nexport default basicTheme;\n","import {createStyles, makeStyles} from \"@mui/styles\";\n\nconst useBasicStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            minHeight: '100vh',\n            backgroundColor: '#fff',\n            width: '100%',\n        },\n        content: {},\n        main: {\n            backgroundImage: 'linear-gradient(0deg, rgba(0,0,0,0.9) 0%, rgba(135,134,134,0.95) 100%), url(background2.jpg)',\n            width: '100%',\n            minHeight: 'calc(100vh - 64px) ',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n            textAlign: 'center',\n        },\n        button: {\n            marginTop: '2rem !important',\n        }\n    })\n);\n\nexport default useBasicStyles;","import {\n  Box,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport InboxIcon from \"@mui/icons-material/Inbox\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { useTranslation } from \"react-i18next\";\n\ntype CustomDrawerProps = {\n  drawer: boolean;\n  setDrawer: (arg0: boolean) => void;\n};\n\nconst CustomDrawer = ({ drawer, setDrawer }: CustomDrawerProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <Drawer\n      PaperProps={{ sx: { backgroundColor: \"secondary.main\" } }}\n      open={drawer}\n      anchor={\"left\"}\n      onClose={() => setDrawer(false)}\n    >\n      <Box\n        sx={{ width: 250 }}\n        onClick={() => setDrawer(false)}\n        onKeyDown={() => setDrawer(false)}\n      >\n        <List sx={{ color: \"secondary.light\" }}>\n          <ListItem button component={Link} to=\"/\">\n            <ListItemIcon>\n              <InboxIcon sx={{ color: \"secondary.light\" }} />\n            </ListItemIcon>\n            <ListItemText primary={t(\"inbox\")} />\n          </ListItem>\n          <ListItem\n            button\n            component={Link}\n            to=\"/completed\"\n            key={\"completedTask\"}\n          >\n            <ListItemIcon>\n              <CheckIcon sx={{ color: \"secondary.light\" }} />\n            </ListItemIcon>\n            <ListItemText primary={t(\"completedTask\")} />\n          </ListItem>\n          <ListItem\n            button\n            component={Link}\n            to=\"/priorities/1\"\n            key={\"lowPriority\"}\n          >\n            <ListItemIcon>\n              <CircleIcon color=\"success\" />\n            </ListItemIcon>\n            <ListItemText primary={t(\"lowPriority\")} />\n          </ListItem>\n          <ListItem\n            button\n            component={Link}\n            to=\"/priorities/2\"\n            key={\"mediumPriority\"}\n          >\n            <ListItemIcon>\n              <CircleIcon color=\"warning\" />\n            </ListItemIcon>\n            <ListItemText primary={t(\"mediumPriority\")} />\n          </ListItem>\n          <ListItem\n            button\n            component={Link}\n            to=\"/priorities/3\"\n            key={\"highPriority\"}\n          >\n            <ListItemIcon>\n              <CircleIcon color=\"error\" />\n            </ListItemIcon>\n            <ListItemText primary={t(\"highPriority\")} />\n          </ListItem>\n        </List>\n      </Box>\n    </Drawer>\n  );\n};\n\nexport default CustomDrawer;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { Task } from \"../../shared/types/task\";\nimport type { RootState } from \"../store\";\n\n// Define a type for the slice state\ninterface TaskState {\n  tasks: Task[];\n}\n\n// Define the initial state using that type\nconst initialState: TaskState = {\n  tasks: [],\n};\n\nexport const taskSlice = createSlice({\n  name: \"task\",\n  // `createSlice` will infer the state type from the `initialState` argument\n  initialState,\n  reducers: {\n    setTasks: (state, action) => {\n      state.tasks = action.payload;\n    },\n  },\n});\n\nexport const { setTasks } = taskSlice.actions;\n\n// Other code such as selectors can use the imported `RootState` type\nexport const selectTasks = (state: RootState) => state.allTasks.tasks;\n\nexport default taskSlice.reducer;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { useFormik } from \"formik\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport * as yup from \"yup\";\nimport { useAppDispatch } from \"../redux/hooks\";\nimport { setTasks } from \"../redux/slices/taskSlice\";\nimport { Priority } from \"../shared/types/priority\";\n\nconst validationSchema = yup.object({\n  title: yup.string().required(\"Please enter a title\"),\n  description: yup.string().required(\"Please enter a description\"),\n  priorityID: yup.string().required(\"Please select a priority\"),\n});\n\nexport const TextFieldStyles = {\n  marginBottom: \"0.5rem\",\n\n  \"& .MuiInputLabel-root\": {\n    color: \"secondary.light\",\n  },\n  \"& input\": {\n    color: \"secondary.light\",\n  },\n};\n\nexport const SelectFieldStyles = {\n  \"& .MuiSelect-select\": {\n    color: \"secondary.light\",\n  },\n};\n\ntype NewTaskCardProps = {\n  setShowTaskCard: (state: boolean) => void;\n};\n\nconst NewTaskCard = ({ setShowTaskCard }: NewTaskCardProps) => {\n  // ------------- fetch priorities from data base ----------------------\n  const [priorities, setPriorities] = useState([]);\n  const [error, setError] = useState(\"\");\n  const { t } = useTranslation();\n\n  const dispatch = useAppDispatch();\n\n  const getPrioritiesEnum = async () => {\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_END_POINT}/v1/priorities`);\n      setPriorities(res.data);\n    } catch (error) {\n      setError(t(\"error\"));\n    }\n  };\n\n  useEffect(() => {\n    getPrioritiesEnum();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const renderPriorities = priorities ? (\n    priorities.map(function (item: Priority, i) {\n      return (\n        <MenuItem key={item._id} value={item._id}>\n          {item.description}\n        </MenuItem>\n      );\n    })\n  ) : (\n    <MenuItem value=\"\"></MenuItem>\n  );\n\n  // ----------------------------------------------------------------------\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      priorityID: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n      try {\n        await axios.post(`${process.env.REACT_APP_API_END_POINT}/v1/tasks`, {\n          completed: false,\n          ...values,\n        });\n\n        // refetch data\n        const res = await axios.get(`${process.env.REACT_APP_API_END_POINT}/v1/tasks`);\n        dispatch(setTasks(res.data));\n        setShowTaskCard(false);\n      } catch (error) {\n        setError(t(\"error\"));\n      }\n    },\n  });\n\n  return (\n    <Box\n      sx={{\n        marginTop: \"2rem\",\n        marginLeft: \"26.5px\",\n        paddingBottom: \"200px\",\n      }}\n    >\n      <Card\n        sx={{\n          backgroundColor: \"secondary.main\",\n          textAlign: \"start\",\n        }}\n      >\n        <CardContent>\n          {error ? (\n            <Typography\n              sx={{ color: \"red\", fontSize: \"1.2rem\", marginBottom: \"0.8rem\" }}\n            >\n              hi\n            </Typography>\n          ) : (\n            \"\"\n          )}\n          <form onSubmit={formik.handleSubmit}>\n            <TextField\n              sx={TextFieldStyles}\n              fullWidth\n              name=\"title\"\n              label=\"Title\"\n              variant=\"outlined\"\n              value={formik.values.title}\n              onChange={formik.handleChange}\n              error={formik.touched.title && Boolean(formik.errors.title)}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n            <TextField\n              sx={TextFieldStyles}\n              fullWidth\n              label=\"Description\"\n              name=\"description\"\n              variant=\"outlined\"\n              value={formik.values.description}\n              onChange={formik.handleChange}\n              error={\n                formik.touched.description && Boolean(formik.errors.description)\n              }\n              helperText={\n                formik.touched.description && formik.errors.description\n              }\n            />\n            <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <FormControl\n                sx={{ minWidth: \"100px\", marginTop: \"0.5rem\" }}\n                error={\n                  formik.touched.priorityID && Boolean(formik.errors.priorityID)\n                }\n              >\n                <InputLabel sx={{ color: \"secondary.light\" }} id=\"select-label\">\n                  Priority\n                </InputLabel>\n                <Select\n                  labelId=\"select-label\"\n                  sx={SelectFieldStyles}\n                  label=\"Priority\"\n                  name=\"priorityID\"\n                  value={formik.values.priorityID}\n                  onChange={formik.handleChange}\n                >\n                  {renderPriorities}\n                </Select>\n                {Boolean(formik.errors.priorityID) &&\n                  formik.touched.priorityID && (\n                    <FormHelperText>Please select a priority</FormHelperText>\n                  )}\n              </FormControl>\n              <Box>\n                <Button\n                  sx={{ mr: \"1rem\", mt: \"15px\" }}\n                  variant=\"outlined\"\n                  type=\"submit\"\n                >\n                  Add Task\n                </Button>\n                <Button\n                  sx={{ mr: \"1rem\", mt: \"15px\" }}\n                  variant=\"outlined\"\n                  onClick={() => setShowTaskCard(false)}\n                >\n                  Cancel\n                </Button>\n              </Box>\n            </Box>\n          </form>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default NewTaskCard;\n","import {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { SelectFieldStyles, TextFieldStyles } from \"./NewTaskCard\";\nimport { Task } from \"../shared/types/task\";\nimport axios from \"axios\";\nimport { Priority } from \"../shared/types/priority\";\nimport { useFormik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport * as yup from \"yup\";\nimport { useLocation } from \"react-router-dom\";\nimport { useAppDispatch } from \"../redux/hooks\";\nimport { setTasks } from \"../redux/slices/taskSlice\";\n\nconst validationSchema = yup.object({\n  title: yup.string().required(\"Please enter a title\"),\n  description: yup.string().required(\"Please enter a description\"),\n  priorityID: yup.string().required(\"Please select a priority\"),\n});\n\ntype SingleTaskProps = {\n  task: Task;\n  forHeader: boolean;\n};\n\nconst SingleTask = ({ task, forHeader }: SingleTaskProps) => {\n  const { t } = useTranslation();\n  const dispatch = useAppDispatch();\n\n  const location = useLocation();\n\n  const { title, description, priorityID, completed, _id: id } = task;\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const [priorities, setPriorities] = useState([]);\n\n  // ------------- fetch priorities from data base ----------------------\n\n  const getPrioritiesEnum = async () => {\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_END_POINT}/v1/priorities`);\n      setPriorities(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getPrioritiesEnum();\n  }, []);\n\n  const renderPriorities = priorities ? (\n    priorities.map(function (item: Priority, i) {\n      return (\n        <MenuItem key={item._id} value={item._id}>\n          {item.description}\n        </MenuItem>\n      );\n    })\n  ) : (\n    <MenuItem value=\"1\"></MenuItem>\n  );\n\n  // --------------------------------------------------------------------------\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`${process.env.REACT_APP_API_END_POINT}/v1/tasks/${id}`);\n\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_END_POINT}/v1/tasks${\n          location.pathname !== \"/\" ? location.pathname : \"\"\n        }`\n      );\n\n      dispatch(setTasks(res.data));\n      setOpen(false);\n    } catch (error) {\n      setError(t(\"error\"));\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      title: title,\n      description: description,\n      priorityID: priorityID,\n      completed: completed,\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n      try {\n        await axios.put(`${process.env.REACT_APP_API_END_POINT}/v1/tasks/${id}`, {\n          ...values,\n        });\n        const res = await axios.get(\n          `${process.env.REACT_APP_API_END_POINT}/v1/tasks${\n            location.pathname !== \"/\" ? location.pathname : \"\"\n          }`\n        );\n        dispatch(setTasks(res.data));\n        setOpen(false);\n      } catch (error) {\n        setError(t(\"error\"));\n      }\n    },\n  });\n  return (\n    <>\n      <ListItem sx={{ paddingBottom: \"0\" }}>\n        <ListItemIcon>\n          <Checkbox\n            checked={formik.values.completed}\n            name=\"completed\"\n            onClick={() => {\n              formik.setFieldValue(\"completed\", !formik.values.completed);\n              formik.handleSubmit();\n            }}\n          />\n        </ListItemIcon>\n        <ListItemText\n          onClick={handleClickOpen}\n          sx={{ color: \"secondary.light\", cursor: \"pointer\" }}\n        >\n          {title}\n        </ListItemText>\n      </ListItem>\n      <Dialog\n        PaperProps={{ sx: { backgroundColor: \"secondary.main\" } }}\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogTitle sx={{ color: \"secondary.light\", marginBottom: \"0.2rem\" }}>\n          Edit Task\n        </DialogTitle>\n\n        <DialogContent sx={{ paddingTop: \"5px !important\" }}>\n          {error ? (\n            <Typography\n              sx={{ color: \"red\", fontSize: \"1.3rem\", marginBottom: \"0.8rem\" }}\n            >\n              {error}\n            </Typography>\n          ) : (\n            \"\"\n          )}\n          <form onSubmit={formik.handleSubmit}>\n            <TextField\n              sx={TextFieldStyles}\n              fullWidth\n              name=\"title\"\n              label=\"Title\"\n              variant=\"outlined\"\n              value={formik.values.title}\n              onChange={formik.handleChange}\n              error={formik.touched.title && Boolean(formik.errors.title)}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n            <TextField\n              sx={TextFieldStyles}\n              fullWidth\n              label=\"Description\"\n              name=\"description\"\n              variant=\"outlined\"\n              value={formik.values.description}\n              onChange={formik.handleChange}\n              error={\n                formik.touched.description && Boolean(formik.errors.description)\n              }\n              helperText={\n                formik.touched.description && formik.errors.description\n              }\n            />\n            <FormControl\n              sx={{ minWidth: \"100px\", marginTop: \"0.5rem\" }}\n              error={Boolean(formik.errors.priorityID)}\n            >\n              <InputLabel sx={{ color: \"secondary.light\" }} id=\"select-label\">\n                Priority\n              </InputLabel>\n              <Select\n                labelId=\"select-label\"\n                sx={SelectFieldStyles}\n                label=\"Priority\"\n                name=\"priorityID\"\n                value={formik.values.priorityID}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.priorityID && Boolean(formik.errors.priorityID)\n                }\n              >\n                {renderPriorities}\n              </Select>\n              {Boolean(formik.errors.priorityID) &&\n                formik.touched.priorityID && (\n                  <FormHelperText>Please select a priority</FormHelperText>\n                )}\n            </FormControl>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            sx={{ mr: \"auto\", ml: \"16px\", mt: \"15px\" }}\n            variant=\"outlined\"\n            type=\"submit\"\n            onClick={() => formik.handleSubmit()}\n          >\n            {t(\"confirmChanges\")}\n          </Button>\n          <Button\n            sx={{ mr: \"1rem\", mt: \"15px\" }}\n            variant=\"outlined\"\n            onClick={handleDelete}\n          >\n            {t(\"deleteTask\")}\n          </Button>\n          <Button\n            sx={{ mr: \"1rem\", mt: \"15px\" }}\n            variant=\"outlined\"\n            onClick={handleClose}\n          >\n            {t(\"cancel\")}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!forHeader ? (\n        <Divider\n          sx={{ backgroundColor: \"secondary.light\" }}\n          variant=\"inset\"\n          component=\"li\"\n        />\n      ) : (\n        <Divider sx={{ backgroundColor: \"secondary.light\" }} />\n      )}\n    </>\n  );\n};\n\nexport default SingleTask;\n","import {\n  AppBar,\n  Box,\n  IconButton,\n  TextField,\n  Toolbar,\n  Typography,\n} from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport CustomDrawer from \"./CustomDrawer\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useAppSelector } from \"../redux/hooks\";\nimport SingleTask from \"../components/SingleTask\";\nimport { selectTasks } from \"../redux/slices/taskSlice\";\nimport { Task } from \"../shared/types/task\";\n\nconst searchStyles = {\n  backgroundColor: \"primary.dark\",\n  color: \"secondary.light\",\n  height: \"40px\",\n  \"& .MuiOutlinedInput-root\": {\n    height: \"40px\",\n    color: \"secondary.light\",\n  },\n  \"& input\": {\n    paddingLeft: \"28px\",\n  },\n};\n\nconst Header = () => {\n  const [drawer, setDrawer] = useState(false);\n  const { t } = useTranslation();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const tasks = useAppSelector(selectTasks);\n  const filteredTasks = tasks?.filter((task) => {\n    if (searchQuery !== \"\") {\n      return task.title.startsWith(searchQuery);\n    }\n    return null;\n  });\n\n  const renderTask = filteredTasks ? (\n    filteredTasks.map(function (item: Task, i) {\n      return <SingleTask key={item._id} task={item} forHeader={true} />;\n    })\n  ) : (\n    <div></div>\n  );\n\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setSearchQuery(e.target.value);\n  };\n\n  return (\n    <Box>\n      <AppBar color=\"secondary\" position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() => setDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Box\n            sx={{ display: \"flex\", flexDirection: \"column\", width: \"250px\" }}\n          >\n            <Box sx={{ position: \"relative\", display: \"inline-block\" }}>\n              <SearchIcon\n                style={{\n                  position: \"absolute\",\n                  left: 3,\n                  top: 9,\n                  zIndex: 5,\n                }}\n              />\n              <TextField\n                id=\"standard-basic\"\n                variant=\"outlined\"\n                placeholder=\"Search\"\n                autoComplete=\"off\"\n                sx={searchStyles}\n                value={searchQuery}\n                onChange={(e) => handleChange(e)}\n              />\n            </Box>\n            {filteredTasks?.length !== 0 && filteredTasks? (\n              <Box\n                sx={{\n                  position: \"absolute\",\n                  top: 56,\n                  backgroundColor: \"primary.dark\",\n                  width: \"inherit\",\n                  border: \"1px solid  #8c8c8c\",\n                  paddingBottom: \"20px\",\n                }}\n              >\n                {renderTask}\n              </Box>\n            ) : (\n              \"\"\n            )}\n          </Box>\n\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            sx={{\n              flexGrow: 1,\n              textAlign: \"center\",\n              paddingRight: \"48px\",\n              \"& a\": { color: \"secondary.light\", textDecoration: \"none\" },\n            }}\n          >\n            <Link to=\"/\">{t(\"appName\")}</Link>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <CustomDrawer drawer={drawer} setDrawer={setDrawer}></CustomDrawer>\n    </Box>\n  );\n};\n\nexport default Header;\n","import {ReactElement, ReactNode} from \"react\";\nimport useBasicStyles from \"./useBasicStyles\";\nimport Header from \"./Header\";\n\n\nexport type DefaultLayoutProps = {\n    children: ReactElement | ReactNode | null;\n};\n\n\nconst BasicLayout = ({children}: DefaultLayoutProps): ReactElement => {\n    const classes = useBasicStyles();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content}>\n                <Header/>\n                <main>\n                    <div className={classes.main}>\n                        {children}\n                    </div>\n                </main>\n            </div>\n        </div>\n\n    )\n\n}\n\nexport default BasicLayout;","import BasicLayout from \"../../layouts\";\nimport { useTranslation } from \"react-i18next\";\nimport NewTaskCard from \"../../components/NewTaskCard\";\nimport { Box, Button, CircularProgress, List, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport SingleTask from \"../../components/SingleTask\";\nimport useBasicStyles from \"../../layouts/useBasicStyles\";\nimport axios from \"axios\";\nimport { Task } from \"../../shared/types/task\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { selectTasks, setTasks } from \"../../redux/slices/taskSlice\";\n\nconst HomePage = () => {\n  const { t } = useTranslation();\n  const styles = useBasicStyles();\n  const tasks = useAppSelector(selectTasks);\n  const dispatch = useAppDispatch();\n\n  const [showTaskCard, setShowTaskCard] = useState(false);\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(\"\");\n  const getData = async () => {\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_END_POINT}/v1/tasks`);\n      dispatch(setTasks(res.data));\n      setIsLoaded(true);\n    } catch (error) {\n      setError(t(\"error\"));\n      setIsLoaded(false);\n    }\n  };\n\n  useEffect(() => {\n    getData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const renderTask = tasks ? (\n    tasks.map(function (item: Task, i) {\n      return <SingleTask key={item._id} task={item} forHeader={false} />;\n    })\n  ) : (\n    <div></div>\n  );\n  if (error) {\n    return (\n      <BasicLayout>\n        <Box sx={{ height: \"100px\" }} />\n        <Typography sx={{ color: \"red\", fontSize: \"2rem\" }}>{error}</Typography>\n      </BasicLayout>\n    );\n  } else {\n    return (\n      <BasicLayout>\n        {isLoaded ? (\n          <div>\n            <Box sx={{ height: \"100px\" }} />\n            <Box\n              sx={{\n                width: \"50%\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                textAlign: \"start\",\n              }}\n            >\n              <Typography\n                sx={{ ml: \"26.5px\", color: \"secondary.light\" }}\n                variant=\"h5\"\n              >\n                {t(\"currentTask\")}\n              </Typography>\n              <Box>\n                <List>{renderTask}</List>\n              </Box>\n              {!showTaskCard && (\n                <Button\n                  className={styles.button}\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  onClick={() => setShowTaskCard(true)}\n                  sx={{ ml: \"26.5px\" }}\n                >\n                  Add Task\n                </Button>\n              )}\n\n              {showTaskCard && (\n                <NewTaskCard setShowTaskCard={setShowTaskCard} />\n              )}\n            </Box>\n          </div>\n        ) : (\n          <Box\n            sx={{\n              width: \"50%\",\n              mx: \"auto\",\n              textAlign: \"center\",\n            }}\n          >\n            <Box sx={{ height: \"100px\" }}></Box>\n\n            <CircularProgress color=\"info\" />\n          </Box>\n        )}\n      </BasicLayout>\n    );\n  }\n};\n\nexport default HomePage;\n","import BasicLayout from \"../../layouts\";\nimport { Box, CircularProgress, List, Typography } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport CelebrationIcon from \"@mui/icons-material/Celebration\";\nimport { Task } from \"../../shared/types/task\";\nimport SingleTask from \"../../components/SingleTask\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { selectTasks, setTasks } from \"../../redux/slices/taskSlice\";\n\nconst CompletedTaskPage = () => {\n  const { t } = useTranslation();\n\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const tasks = useAppSelector(selectTasks);\n  const dispatch = useAppDispatch();\n\n  const [error, setError] = useState(\"\");\n\n  const getData = async () => {\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_END_POINT}/v1/tasks/completed`);\n      dispatch(setTasks(res.data));\n      setIsLoaded(true);\n    } catch (error) {\n      setError(t(\"error\"));\n      setIsLoaded(false);\n    }\n  };\n\n  useEffect(() => {\n    getData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const renderTask = tasks ? (\n    tasks.map(function (item: Task, i) {\n      return <SingleTask key={item._id} task={item} forHeader={false} />;\n    })\n  ) : (\n    <div></div>\n  );\n  if (error) {\n    return (\n      <BasicLayout>\n        <Box sx={{ height: \"100px\" }} />\n        <Typography sx={{ color: \"red\", fontSize: \"2rem\" }}>{error}</Typography>\n      </BasicLayout>\n    );\n  } else {\n    return (\n      <BasicLayout>\n        {isLoaded ? (\n          <div>\n            <Box sx={{ height: \"100px\" }} />\n            <Box\n              sx={{\n                width: \"50%\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                textAlign: \"start\",\n              }}\n            >\n              <Box sx={{ ml: \"26.5px\", display: \"flex\" }}>\n                <CelebrationIcon sx={{ color: \"yellow\" }} />\n                <Typography\n                  sx={{ color: \"secondary.light\", ml: \"5px\", mr: \"5px\" }}\n                  variant=\"h5\"\n                >\n                  {t(\"completedTask\")}\n                </Typography>\n                <CelebrationIcon sx={{ color: \"yellow\" }} />\n              </Box>\n              <Box>\n                <List>{renderTask}</List>\n              </Box>\n            </Box>\n          </div>\n        ) : (\n          <Box\n            sx={{\n              width: \"50%\",\n              mx: \"auto\",\n              textAlign: \"center\",\n            }}\n          >\n            <Box sx={{ height: \"100px\" }}></Box>\n\n            <CircularProgress color=\"info\" />\n          </Box>\n        )}\n      </BasicLayout>\n    );\n  }\n};\n\nexport default CompletedTaskPage;\n","import BasicLayout from \"../../layouts\";\nimport { Box, CircularProgress, List, Typography } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { Task } from \"../../shared/types/task\";\nimport SingleTask from \"../../components/SingleTask\";\nimport { useEffect, useState } from \"react\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport axios from \"axios\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { selectTasks, setTasks } from \"../../redux/slices/taskSlice\";\n\nconst LowPriorityPage = () => {\n  const { t } = useTranslation();\n\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const tasks = useAppSelector(selectTasks);\n  const dispatch = useAppDispatch();\n  const [error, setError] = useState(\"\");\n\n  const getData = async () => {\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_END_POINT}/v1/tasks/priorities/1`\n      );\n      dispatch(setTasks(res.data));\n      setIsLoaded(true);\n    } catch (error) {\n      setError(t(\"error\"));\n      setIsLoaded(false);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const renderTask = tasks ? (\n    tasks.map(function (item: Task, i) {\n      return <SingleTask key={item._id} task={item} forHeader={false} />;\n    })\n  ) : (\n    <div></div>\n  );\n\n  if (error) {\n    return (\n      <BasicLayout>\n        <Box sx={{ height: \"100px\" }} />\n        <Typography sx={{ color: \"red\", fontSize: \"2rem\" }}>{error}</Typography>\n      </BasicLayout>\n    );\n  } else {\n    return (\n      <BasicLayout>\n        {isLoaded ? (\n          <div>\n            <Box sx={{ height: \"100px\" }} />\n            <Box\n              sx={{\n                width: \"50%\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                textAlign: \"start\",\n              }}\n            >\n              <Box sx={{ ml: \"26.5px\", display: \"flex\" }}>\n                <CircleIcon sx={{ mt: \"5px\", mr: \"5px\" }} color=\"success\" />\n                <Typography\n                  sx={{ color: \"secondary.light\", ml: \"5px\", mr: \"5px\" }}\n                  variant=\"h5\"\n                >\n                  {t(\"lowPriority\")}\n                </Typography>\n              </Box>\n              <Box>\n                <List>{renderTask}</List>\n              </Box>\n            </Box>\n          </div>\n        ) : (\n          <Box\n            sx={{\n              width: \"50%\",\n              mx: \"auto\",\n              textAlign: \"center\",\n            }}\n          >\n            <Box sx={{ height: \"100px\" }}></Box>\n\n            <CircularProgress color=\"info\" />\n          </Box>\n        )}\n      </BasicLayout>\n    );\n  }\n};\n\nexport default LowPriorityPage;\n","import BasicLayout from \"../../layouts\";\nimport { Box, CircularProgress, List, Typography } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { Task } from \"../../shared/types/task\";\nimport SingleTask from \"../../components/SingleTask\";\nimport { useEffect, useState } from \"react\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport axios from \"axios\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { selectTasks, setTasks } from \"../../redux/slices/taskSlice\";\n\nconst MediumPriorityPage = () => {\n  const { t } = useTranslation();\n  const tasks = useAppSelector(selectTasks);\n  const dispatch = useAppDispatch();\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const getData = async () => {\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_END_POINT}/v1/tasks/priorities/2`\n      );\n      dispatch(setTasks(res.data));\n      setIsLoaded(true);\n    } catch (error) {\n      setError(t(\"error\"));\n      setIsLoaded(false);\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const renderTask = tasks ? (\n    tasks.map(function (item: Task, i) {\n      return <SingleTask key={item._id} task={item} forHeader={false} />;\n    })\n  ) : (\n    <div></div>\n  );\n  if (error) {\n    return (\n      <BasicLayout>\n        <Box sx={{ height: \"100px\" }} />\n        <Typography sx={{ color: \"red\", fontSize: \"2rem\" }}>{error}</Typography>\n      </BasicLayout>\n    );\n  } else {\n    return (\n      <BasicLayout>\n        {isLoaded ? (\n          <div>\n            <Box sx={{ height: \"100px\" }} />\n            <Box\n              sx={{\n                width: \"50%\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                textAlign: \"start\",\n              }}\n            >\n              <Box sx={{ ml: \"26.5px\", display: \"flex\" }}>\n                <CircleIcon sx={{ mt: \"5px\", mr: \"5px\" }} color=\"warning\" />\n                <Typography\n                  sx={{ color: \"secondary.light\", ml: \"5px\", mr: \"5px\" }}\n                  variant=\"h5\"\n                >\n                  {t(\"mediumPriority\")}\n                </Typography>\n              </Box>\n              <Box>\n                <List>{renderTask}</List>\n              </Box>\n            </Box>\n          </div>\n        ) : (\n          <Box\n            sx={{\n              width: \"50%\",\n              mx: \"auto\",\n              textAlign: \"center\",\n            }}\n          >\n            <Box sx={{ height: \"100px\" }}></Box>\n\n            <CircularProgress color=\"info\" />\n          </Box>\n        )}\n      </BasicLayout>\n    );\n  }\n};\n\nexport default MediumPriorityPage;\n","import BasicLayout from \"../../layouts\";\nimport { Box, CircularProgress, List, Typography } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { Task } from \"../../shared/types/task\";\nimport SingleTask from \"../../components/SingleTask\";\nimport { useEffect, useState } from \"react\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport axios from \"axios\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { selectTasks, setTasks } from \"../../redux/slices/taskSlice\";\n\nconst HighPriorityPage = () => {\n  const { t } = useTranslation();\n\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const tasks = useAppSelector(selectTasks);\n  const dispatch = useAppDispatch();\n  const [error, setError] = useState(\"\");\n\n  const getData = async () => {\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_END_POINT}/v1/tasks/priorities/3`\n      );\n      dispatch(setTasks(res.data));\n      setIsLoaded(true);\n    } catch (error) {\n      setError(t(\"error\"));\n      setIsLoaded(false);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const renderTask = tasks ? (\n    tasks.map(function (item: Task, i) {\n      return <SingleTask key={item._id} task={item} forHeader={false} />;\n    })\n  ) : (\n    <div></div>\n  );\n\n  if (error) {\n    return (\n      <BasicLayout>\n        <Box sx={{ height: \"100px\" }} />\n        <Typography sx={{ color: \"red\", fontSize: \"2rem\" }}>{error}</Typography>\n      </BasicLayout>\n    );\n  } else {\n    return (\n      <BasicLayout>\n        {isLoaded ? (\n          <div>\n            <Box sx={{ height: \"100px\" }} />\n            <Box\n              sx={{\n                width: \"50%\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                textAlign: \"start\",\n              }}\n            >\n              <Box sx={{ ml: \"26.5px\", display: \"flex\" }}>\n                <CircleIcon sx={{ mt: \"5px\", mr: \"5px\" }} color=\"error\" />\n                <Typography\n                  sx={{ color: \"secondary.light\", ml: \"5px\", mr: \"5px\" }}\n                  variant=\"h5\"\n                >\n                  {t(\"highPriority\")}\n                </Typography>\n              </Box>\n              <Box>\n                <List>{renderTask}</List>\n              </Box>\n            </Box>\n          </div>\n        ) : (\n          <Box\n            sx={{\n              width: \"50%\",\n              mx: \"auto\",\n              textAlign: \"center\",\n            }}\n          >\n            <Box sx={{ height: \"100px\" }}></Box>\n\n            <CircularProgress color=\"info\" />\n          </Box>\n        )}\n      </BasicLayout>\n    );\n  }\n};\n\nexport default HighPriorityPage;\n","import { Box, Typography } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport BasicLayout from \"../layouts\";\n\nconst NotFound = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BasicLayout>\n      <Box sx={{ height: \"100px\" }} />\n      <Typography sx={{ color: \"red\", fontSize: \"2rem\" }}>\n        {t(\"notFound\")}\n      </Typography>\n    </BasicLayout>\n  );\n};\n\nexport default NotFound;\n","import { Routes, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport CompletedTaskPage from \"./pages/CompletedTaskPage\";\nimport LowPriority from \"./pages/labels/LowPriority\";\nimport MediumPriority from \"./pages/labels/MediumPriority\";\nimport HighPriority from \"./pages/labels/HighPriority\";\nimport NotFound from \"./pages/NotFound\";\n\nconst MainRouter = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/completed\" element={<CompletedTaskPage />} />\n      <Route path=\"/priorities/1\" element={<LowPriority />} />\n      <Route path=\"/priorities/2\" element={<MediumPriority />} />\n      <Route path=\"/priorities/3\" element={<HighPriority />} />\n      <Route path=\"*\" element={<NotFound />} />\n    </Routes>\n  );\n};\n\nexport default MainRouter;\n","import React from 'react';\nimport './App.css';\nimport theme from \"./layouts/basicTheme\";\nimport MainRouter from \"./MainRouter\";\nimport {ThemeProvider} from \"@mui/material/styles\";\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <MainRouter/>\n        </ThemeProvider>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from \"i18next\";\nimport {initReactI18next} from \"react-i18next\";\nimport common from \"./assets/locales/en/common.json\";\n\n// the translations\n// (tip move them in a JSON file and import them,\n// or even better, manage them separated from your code: https://react.i18next.com/guides/multiple-translation-files)\nconst resources = {\n    en: {\n        common: common\n    },\n};\n\ni18n\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        defaultNS: \"common\",\n        lng: \"en\",\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        }\n    });\n\nexport default i18n;","import { combineReducers } from \"redux\";\nimport taskSlice from \"./slices/taskSlice\";\nexport default combineReducers({\n  allTasks: taskSlice,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\nimport \"./i18n\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}